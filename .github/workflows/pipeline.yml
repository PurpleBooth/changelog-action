name: Pipeline
on:
  push:
    branches:
    - '*'
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - uses: ./
    - run: '[[ -f "CHANGELOG.md" && -s "CHANGELOG.md" ]]'
      shell: bash
    - run: 'cat "CHANGELOG.md"'
      shell: bash

  lint-markdown:
    uses: PurpleBooth/common-pipelines/.github/workflows/markdown-check.yml@main
  commit-checks:
    uses: PurpleBooth/common-pipelines/.github/workflows/commit-check.yml@main
  release:
    if: github.ref == 'refs/heads/main'
    needs:
    - lint-markdown
    - test
    - commit-checks
    outputs:
      current_version: ${{ steps.current_version.outputs.current_version }}
      previous_version: ${{ steps.previous_version.outputs.previous_version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    - uses: cargo-bins/cargo-binstall@main
      name: Install cargo binstall
    - name: Get tags
      run: git fetch --tags origin
    - shell: bash
      run: cargo binstall --no-confirm cargo-edit
    - shell: bash
      run: cargo binstall --no-confirm --locked cocogitto
    - id: previous_version
      run: |
        cog get-version | tee .version
        echo "previous_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
        rm .version
      shell: bash
    - name: Semver release
      id: release
      run: |
        git config --global user.name "cog-bot"
        git config --global user.email "cog@example.com"
        cog bump --auto
    - id: current_version
      run: |
        cog get-version | tee .version
        echo "current_version=$( cat .version )"  >> "$GITHUB_OUTPUT"
        rm .version
      shell: bash

  upload-release:
    if: needs.release.outputs.current_version != needs.release.outputs.previous_version 
    needs:
    - release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      name: Checkout the repository
      with:
        lfs: true
        fetch-depth: 0
        ref: v${{ needs.release.outputs.current_version }}
    - id: get_repository_name
      name: Calculate repository name
      run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> "$GITHUB_OUTPUT"
      shell: bash
    - uses: ./
      id: changelog
      with:
        args: -v v${{ needs.release.outputs.previous_version }}..v${{ needs.release.outputs.current_version
          }}
    - env:
        GITHUB_TOKEN: ${{ github.token }}
      id: create_release
      uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
      with:
        allowUpdates: true
        token: ${{ github.token }}
        bodyFile: CHANGELOG.md
        name: Release v${{ needs.release.outputs.current_version }}
        tag: v${{ needs.release.outputs.current_version }}
